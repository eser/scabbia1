<?php

	class logger {
		public static function extension_info() {
			return array(
				'name' => 'logger',
				'version' => '1.0.2',
				'phpversion' => '5.1.0',
				'fwversion' => '1.0',
				'enabled' => true,
				'autoevents' => false,
				'depends' => array('http')
			);
		}

		public static function extension_load() {
			set_exception_handler(array('logger', 'exceptionCallback'));
			set_error_handler(array('logger', 'errorCallback'), E_ALL);
			ini_set('display_errors', '1');
			ini_set('track_errors', '1');
			ini_set('html_errors', '0');
		}

		public static function errorCallback($uCode, $uMessage, $uFile, $uLine) {
			throw new ErrorException($uMessage, $uCode, 0, $uFile, $uLine);
		}

		public static function exceptionCallback($uException) {
			switch($uException->getCode()) {
				case E_ERROR: case E_USER_ERROR:
					$tType = 'Error'; break;
				case E_WARNING: case E_USER_WARNING:
					$tType = 'Warning'; break;
				case E_NOTICE: case E_USER_NOTICE:
					$tType = 'Notice'; break;
				case E_STRICT:
					$tType = 'Strict'; break;
				default:
					$tType = 'Unknown'; break;
			}

			$tIgnoreError = false;
			Events::invoke('reportError', array(
				'type' => &$tType,
				'message' => $uException->getMessage(),
				'file' => $uException->getFile(),
				'line' => $uException->getLine(),
				'ignore' => &$tIgnoreError
			));

			if(!$tIgnoreError) {
//				http::sendStatus(500);
//				http::sendHeader('Content-Type', 'text/html', true);

				Events::setDisabled(true);
				$tEventDepth = Events::getEventDepth();

				for(;ob_get_level() > 0;ob_end_flush());
				$tString = '';
				$tString .= '<div>'; // for content-type: text/xml
				$tString .= '<div style="font: 11pt \'Lucida Sans Unicode\'; color: #000060; border-bottom: 1px solid #C0C0C0; background: #F0F0F0; padding: 8px 12px 8px 12px;"><span style="font-weight: bold;">' . $tType . '</span>: ' . basename($uException->getFile(), QEXT_PHP) . '@' . $uException->getLine() . '</div>';
				$tString .= '<div style="font: 10pt \'Lucida Sans Unicode\'; color: #404040; padding: 0px 12px 0px 12px; margin: 20px 0px 20px 0px; line-height: 20px;">' . $uException->getMessage() . '</div>';
				if(count($tEventDepth) > 0) {
					$tString .= '<div style="font: 10pt \'Lucida Sans Unicode\'; color: #800000; padding: 0px 12px 0px 12px; margin: 20px 0px 20px 0px; line-height: 20px;"><b>eventDepth:</b><ul>' . implode('<br />', $tEventDepth) . '</ul></div>';
				}
				$tString .= '<div style="font: 7pt \'Lucida Sans Unicode\'; color: #808080; padding: 0px 12px 0px 12px;">Generated by <a href="mailto:laroux.pos@gmail.com">' . ucfirst(INCLUDED) . '</a>.</div>';
				$tString .= '</div>';
				exit($tString);
			}
		}
	}

?>